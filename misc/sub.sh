#!/bin/bash
# version="0.1"
#
# This is an optional arguments-only example of Argbash potential
#
# ARG_OPTIONAL_SINGLE([user],[u],[optional argument help msg])
# ARG_OPTIONAL_SINGLE([Password],[P],[optional argument help msg])
# ARG_OPTIONAL_SINGLE([server],[s],[optional argument help msg])
# ARG_OPTIONAL_SINGLE([topic],[t],[optional argument help msg])
# ARG_HELP([The general script's help msg])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.6.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options='uPsth'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}



# THE DEFAULTS INITIALIZATION - OPTIONALS
. ~/.sub.conf
_arg_user=$user
_arg_password=$password
_arg_server=$server
_arg_topic=$topic

print_help ()
{
	printf '%s\n' "The general script's help msg"
	printf 'Usage: %s [-u|--user <arg>] [-P|--Password <arg>] [-s|--server <arg>] [-t|--topic <arg>] [-h|--help]\n' "$0"
	printf '\t%s\n' "-u,--user: optional argument help msg (no default)"
	printf '\t%s\n' "-P,--Password: optional argument help msg (no default)"
	printf '\t%s\n' "-s,--server: optional argument help msg (no default)"
	printf '\t%s\n' "-t,--topic: optional argument help msg (no default)"
	printf '\t%s\n' "-h,--help: Prints help"
}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-u|--user)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_user="$2"
				shift
				;;
			--user=*)
				_arg_user="${_key##--user=}"
				;;
			-u*)
				_arg_user="${_key##-u}"
				;;
			-P|--Password)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_password="$2"
				shift
				;;
			--Password=*)
				_arg_password="${_key##--Password=}"
				;;
			-P*)
				_arg_password="${_key##-P}"
				;;
			-s|--server)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_server="$2"
				shift
				;;
			--server=*)
				_arg_server="${_key##--server=}"
				;;
			-s*)
				_arg_server="${_key##-s}"
				;;
			-t|--topic)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_topic="$2"
				shift
				;;
			--topic=*)
				_arg_topic="${_key##--topic=}"
				;;
			-t*)
				_arg_topic="${_key##-t}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

# ] <-- needed because of Argbash

mosquitto_sub -u $_arg_user -P $_arg_password -h $_arg_server -t $_arg_topic