- platform: mqtt
  state_topic: 'monitor/rpizw/mike_ipad'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Garage'

- platform: rest
  resource: https://pypi.python.org/pypi/homeassistant/json
  name: Latest version
  value_template: '{{ value_json.info.version }}'
  scan_interval: 3600

- platform: version
  name: Current version
  
# - platform: imap  #_email_content
#   server: imap.gmail.com
#   name: 'smsemail'
#   port: 993
#   username: hankpennybandit@gmail.com
#   password: spooey68
#   senders:
#     - vamichael@gmail.com
#   value_template: >-
#   #     {% if 'New text message' in subject %}
#   #       power_out
#   #     {% elif 'Power Restored' in subject %}
#   #       power_on
#   #     {% endif %}
  
# - platform: imap_email_content
#   name: smsinput
#   server: imap.gmail.com
#   port: 993
#   username:  !secret gmail_monitor_email
#   password: !secret gmail_monitor_password
#   senders: 
#     - !secret mikes_secret_email


- platform: template
  sensors:

    showbmw:
      friendly_name: BMW
      value_template: "{{states.sensor.bmw.state | int}}"
      unit_of_measurement: 'seconds'
      icon_template: mdi:mdi-timelapse
      value_template: > 
        {% if states.sensor.bmw.state == 'unavailable' %}
          0
        {% else %}
          {{states.sensor.bmw.state | int}}
        {% endif %}

    showhyundai:
      friendly_name: HYUNDAI
      unit_of_measurement: 'seconds'
      icon_template: mdi:mdi-timelapse
      value_template: > 
        {% if (states.sensor.hyundai.state == 'unavailable') %}
          0
        {% else %}
          {{states.sensor.hyundai.state | int}}
        {% endif %}

    battery_frontdoor:
      friendly_name: 'Front Door Battery'
      value_template: "{% if states.zwave.front_door_lock %}
          {{ states.zwave.front_door_lock.attributes.battery_level }}
        {% else %}
          unknown
        {% endif %}"
      unit_of_measurement: '%'
      icon_template: >-
        {% set battery_level = states('sensor.battery_frontdoor')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
          mdi:battery-unknown
        {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
        {% endif %}

    vision_front_door_battery:
      friendly_name: "Front Door Sensor Battery"
      value_template: "{% if states.zwave.vision_front_door_sensor  %}
        {{ states.zwave.vision_front_door_sensor.attributes.battery_level }}
        {% else %}
          Unknown
        {% endif %}"
      unit_of_measurement: '%'
      # entity_id: zwave.vision.front_door_sensor
      icon_template: >-
        {% set battery_level = states.zwave.vision_front_door_sensor.attributes.battery_level|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
          mdi:battery-unknown
        {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
        {% endif %}


